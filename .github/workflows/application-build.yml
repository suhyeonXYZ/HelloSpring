name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
    tags:
      - v2.*
      - v1.*
  pull_request:
    branches:
      - main

jobs:
  sonarqube-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube -Dsonar.host.url=${{ secrets.SONARQUBE_URL }} -Dsonar.projectKey=your_project_key -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  
  build-and-push-docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set Docker image tag
        id: docker_tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            IMAGE_TAG=${{ github.ref }}  
            IMAGE_TAG=${IMAGE_TAG#refs/tags/}  # "refs/tags/" 부분 제거
          else
            IMAGE_TAG=latest  # 메인 브랜치에서는 latest 사용
          fi
          echo "TAG=${IMAGE_TAG}" >> $GITHUB_ENV  # 환경 변수에 TAG 저장

      - name: Build Docker image
        run: |
          echo "Building Docker image with tag: ${{ env.TAG }}"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hellospring:${{ env.TAG }} .

      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/hellospring:${{ env.TAG }}
