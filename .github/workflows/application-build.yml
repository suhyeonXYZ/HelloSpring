name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  sonarqube-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube -Dsonar.host.url=https://sonarqube-instance.com -Dsonar.projectKey=your_project_key -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-push-docker:
    runs-on: ubuntu-latest
#    needs: sonarqube-analysis
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set Docker image tag
        id: docker_tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            IMAGE_TAG=${{ github.ref_name }}  # Tag name (e.g., v1.0.0)
          else
            IMAGE_TAG=latest  # Use latest for main branch
          fi
          echo "tag=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Build Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker build -t $DOCKER_USERNAME/hellospring:${{ env.tag }} .

      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push $DOCKER_USERNAME/hellospring:${{ env.tag }}
